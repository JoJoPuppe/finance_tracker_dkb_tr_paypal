"""add user and bank account tables

Revision ID: 8bb1c6522396
Revises: 15e1ed89ff15
Create Date: 2025-04-18 21:22:10.165687

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8bb1c6522396'
down_revision = '15e1ed89ff15'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('bank_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('iban', sa.String(length=34), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bank_account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bank_account_iban'), ['iban'], unique=True)

    with op.batch_alter_table('bank_transaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bank_account_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('counterparty_iban', sa.String(length=34), nullable=True))
        batch_op.add_column(sa.Column('is_internal_transfer', sa.Boolean(), nullable=True))
        batch_op.create_index(batch_op.f('ix_bank_transaction_counterparty_iban'), ['counterparty_iban'], unique=False)
        batch_op.create_foreign_key(None, 'bank_account', ['bank_account_id'], ['id'])

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('rule', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rule', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('bank_transaction', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_bank_transaction_counterparty_iban'))
        batch_op.drop_column('is_internal_transfer')
        batch_op.drop_column('counterparty_iban')
        batch_op.drop_column('bank_account_id')

    with op.batch_alter_table('bank_account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bank_account_iban'))

    op.drop_table('bank_account')
    op.drop_table('user')
    # ### end Alembic commands ###
